import { ErrorBoundary } from '@statsig/client-core';
import { AutoCaptureEventName } from './AutoCaptureEvent';
import { ConsoleLogAutoCaptureSettings } from './AutoCaptureOptions';
export type ConsoleLogLevel = 'log' | 'info' | 'warn' | 'error' | 'debug' | 'trace';
export declare class ConsoleLogManager {
    private _enqueueFn;
    private _errorBoundary;
    private _options;
    private _restoreFns;
    private _isTracking;
    private _logLevel;
    private readonly __source;
    private readonly _maxKeys;
    private readonly _maxDepth;
    private readonly _maxStringLength;
    constructor(_enqueueFn: (eventName: AutoCaptureEventName, value: string, metadata: Record<string, unknown>) => void, _errorBoundary: ErrorBoundary, _options: ConsoleLogAutoCaptureSettings);
    startTracking(): void;
    stopTracking(): void;
    private _patchConsole;
    private _enqueueConsoleLog;
    private _shouldLog;
}
