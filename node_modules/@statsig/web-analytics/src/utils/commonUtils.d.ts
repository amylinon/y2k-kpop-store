interface NetworkInformation {
    downlink: number;
    effectiveType: string;
    rtt: number;
    saveData: boolean;
}
export declare const interactiveElements: string[];
export declare function _stripEmptyValues<T extends Record<string, string | number | null | undefined>>(obj: T): Partial<Record<keyof T, string | number>>;
export declare function _getTargetNode(e: Event): Element | null;
export declare function _shouldLogEvent(e: Event, el: Element, isCopyEvent?: boolean): boolean;
export declare function _getSafeUrl(): URL;
export declare function _getSafeUrlString(): string;
export declare function _getSanitizedPageUrl(): string;
export declare function _registerEventHandler(element: Document | Window, eventType: string, handler: (event: Event) => void): void;
export declare function _getSafeNetworkInformation(): NetworkInformation | null;
export declare function _getSafeTimezone(): string | null;
export declare function _getSafeTimezoneOffset(): number | null;
export declare function _getAnchorNodeInHierarchy(node: Element | null): Element | null;
export declare function _sanitizeString(maybeString: string | null | undefined): string | null;
export declare function throttle<T extends (...args: unknown[]) => void>(fn: T, limit: number): T;
export declare function wrapFunctionWithRestore(targetObject: Record<string, unknown>, functionName: string, wrapperFactory: (original: (...args: unknown[]) => unknown) => (...args: unknown[]) => unknown): () => void;
export {};
