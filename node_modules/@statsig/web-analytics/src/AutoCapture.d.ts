import { PrecomputedEvaluationsInterface, StatsigPlugin } from '@statsig/client-core';
import { AutoCaptureOptions } from './AutoCaptureOptions';
export declare class StatsigAutoCapturePlugin implements StatsigPlugin<PrecomputedEvaluationsInterface> {
    private _options?;
    readonly __plugin = "auto-capture";
    constructor(_options?: AutoCaptureOptions | undefined);
    bind(client: PrecomputedEvaluationsInterface): void;
}
export declare function runStatsigAutoCapture(client: PrecomputedEvaluationsInterface, options?: AutoCaptureOptions): AutoCapture;
export declare class AutoCapture {
    private _client;
    private _errorBoundary;
    private _disabledEvents;
    private _previousLoggedPageViewUrl;
    private _eventFilterFunc?;
    private _hasLoggedPageViewEnd;
    private _engagementManager;
    private _rageClickManager;
    private _pageViewLogged;
    private _webVitalsManager;
    private _deadClickManager;
    private _consoleLogManager;
    private _options?;
    constructor(_client: PrecomputedEvaluationsInterface, options?: AutoCaptureOptions);
    private _addEventHandlers;
    private _addPageViewTracking;
    private _autoLogEvent;
    private _initialize;
    private _logError;
    private _logSessionStart;
    private _tryLogPageView;
    private _tryLogPageViewEnd;
    private _logRageClick;
    private _logPerformance;
    private _enqueueAutoCapture;
    private _updateClientWithPossibleFirstTouchMetadata;
    private _flushImmediately;
    private _isNewSession;
    private _getSessionFromClient;
    static getAllMetadata(): Record<string, string | number>;
}
